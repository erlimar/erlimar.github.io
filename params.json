{"name":"<E5R/>","tagline":"Erlimar Silva Campos","body":"### Resumo profissional\r\nAdoro programar! Por isso faço questão de dizer `sou programador`, não analista ou desenvolvedor, mas `programador`.\r\n\r\nAcredito que criar softwares é uma arte, e olhar para uma sequência de códigos bem escrita (seja qual for a linguagem) é semelhante a deslumbrar-se com uma bela pintura.\r\n\r\nÉ uma pena ver que o mercado atual não valoriza tanto esse profissional, e mais penoso ainda é constatar que os profissionais que estão se formando hoje (seja em faculdades ou no próprio mercado de trabalho) estão perdendo essa essência: que \"programar é uma arte\".\r\n\r\nMas acredito que posso contribuir para mudar essa história. Quero empreender em uma solução para esse problema, e descobrir que ainda é possível criar softwares com qualidade, seja em uma empresa que busca o mesmo objetivo, ou em um novo negócio com os parceiros certos.\r\n\r\n\r\n***\r\n\r\n### Projeto pessoal atual\r\n\r\n[E5R no Google+](https://plus.google.com/b/117441063600253321808/)\r\n\r\nQuer participar desse projeto? Então o que tem a dizer sobre este código abaixo:\r\n\r\n```csharp\r\nnamespace IoC\r\n{\r\n\tpublic interface IService1\r\n\t{\r\n\t\tvoid Run();\r\n\t\tbool Running();\r\n\t}\r\n\t\r\n\tpublic interface IService2\r\n\t{\r\n\t\tvoid OtherMethod();\r\n\t}\r\n\t\r\n\tpublic interface IService3\r\n\t{\r\n\t\tvoid OtherMethod2();\r\n\t}\r\n\t\r\n\tpublic class MyService1 : IService1\r\n\t{\r\n\t\tpublic void Run(){}\r\n\t\tpublic bool Running(){\r\n            return false;\r\n        }\r\n\t}\r\n\t\r\n\tpublic class MyService2 : IService2\r\n\t{\r\n\t\tpublic void OtherMethod(){}\r\n\t}\r\n\t\r\n\tpublic class MyService3 : IService3\r\n\t{\r\n\t\tpublic void OtherMethod(){}\r\n\t}\r\n\t\r\n\tpublic class MyProccess\r\n\t{\r\n\t\tprivate IService1 service1_;\r\n\t\tprivate IService2 service2_;\r\n\t\tprivate IService3 service3_;\r\n\r\n\t\tprivate IService1 service1_2_;\r\n\t\tprivate IService2 service2_2_;\r\n\t\tprivate IService3 service3_2_;\r\n\t\t\r\n\t\tpublic MyProccess(IService1 service1)\r\n\t\t{\r\n\t\t\tthis.service1_ = service1;\r\n\t\t}\r\n\t\t\r\n\t\tpublic IService2 Service2\r\n\t\t{\r\n\t\t\tget { return this.service2_; }\r\n\t\t\tset { this.service2_ = value; }\r\n\t\t}\r\n\t\t\r\n        [InjectionTo(typeof(IService3), \"service3_\")]\r\n\t\tpublic object Service3\r\n\t\t{\r\n\t\t\tget { return this.service3_; }\r\n\t\t\tset {\r\n\t\t\t\tif(value.GetType() != this.service3_.GetType()){\r\n                    throw new InvalidCastException();\r\n                }\r\n                this.service3_ = (IService3)value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n        [InjectionMethod]\r\n        public void IoC(IService1 service1, IService2 service2,\r\n            IService3 service3)\r\n        {\r\n            this.service1_2_ = service1;\r\n            this.service2_2_ = service2;\r\n            this.service3_2_ = service3;\r\n        }\r\n\t}\r\n\r\n    class InjectionToAttribute : Attribute\r\n    {\r\n        public InjectionToAttribute(Type type, string name){}\r\n    }\r\n\r\n    class InjectionMethodAttribute : Attribute\r\n    {\r\n    }\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}